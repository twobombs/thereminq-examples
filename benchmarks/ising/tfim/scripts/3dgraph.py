import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# 1. The sample data generated by your script
samples = [
    4095, 16383, 0, 63, 31, 3, 511, 7, 0, 8191, 511, 7, 1, 2047, 7, 3, 7,
    1, 2047, 7, 7, 16383, 0, 8191, 2047, 7, 127, 3, 3, 1, 255, 3, 1023,
    0, 15, 7, 4095, 1023, 3, 63, 63, 31, 63, 4095, 31, 3, 3, 15, 15,
    4095, 32767, 7, 1, 1, 2047, 31, 15, 15, 1, 3, 511, 1023, 31, 15, 0,
    15, 15, 15, 3, 8191, 4095, 0, 1, 15, 1023, 32767, 31, 1023, 3, 1,
    31, 4095, 511, 7, 0, 3, 0, 3, 4095, 127, 255, 32767, 7, 0, 31, 7,
    3, 7, 0, 31
]

# 2. Count the frequency of each unique sample
unique_states, frequencies = np.unique(samples, return_counts=True)

# 3. Set up the 3D plot
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')

# 4. Define bar positions and dimensions
# Bars are positioned along the x-axis
x_pos = np.arange(len(unique_states))
y_pos = np.zeros(len(unique_states))  # Bars start at y=0
z_pos = np.zeros(len(unique_states))  # Bars start from the floor (z=0)

dx = 0.8 * np.ones(len(unique_states)) # Width of bars
dy = 0.8 * np.ones(len(unique_states)) # Depth of bars
dz = frequencies                         # Height of bars is their frequency

# 5. Create the 3D bars
ax.bar3d(x_pos, y_pos, z_pos, dx, dy, dz, color='dodgerblue')

# 6. Customize the plot
ax.set_title('Frequency of Ising Model Measurement Outcomes', fontsize=16)
ax.set_ylabel('State (Integer Representation)')
ax.set_zlabel('Frequency (Count)', fontsize=12)

# Set the x-axis ticks to be the actual state values
ax.set_xticks(x_pos)
ax.set_xticklabels(unique_states, rotation=90, ha='center')

# To avoid clutter, we use the y-axis for the state labels instead of the x-axis
# This improves readability when there are many states.
ax.set_xlabel('')
ax.set_yticks(x_pos) # Use y-ticks to position labels
ax.set_yticklabels(unique_states, rotation=-15, va='center', ha='left')

ax.set_zlabel('Frequency (Count)', fontsize=12)


plt.tight_layout()
plt.show()
